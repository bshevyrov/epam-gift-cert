
plugins {
    id 'java'
    id 'application'
    id 'war'
}

group 'com.epam.esm'
version '1.0-SNAPSHOT'


java {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:8.0.47'
    implementation 'org.apache.tomcat:tomcat-jdbc:8.5.88'
    implementation 'com.mysql:mysql-connector-j:8.0.33'
    implementation 'org.springframework:spring-context:4.3.30.RELEASE'
    implementation 'org.springframework:spring-jdbc:4.3.30.RELEASE'
    implementation 'org.springframework:spring-webmvc:4.3.30.RELEASE'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.mybatis:mybatis:3.5.13'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework:spring-test:4.3.30.RELEASE'
    testImplementation 'com.h2database:h2:2.1.214'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.mockito:mockito-inline:4.11.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}


application {
    mainClass = 'com.epam.esm.Application'
}

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
task fatWar(type: War) {

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with war
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}